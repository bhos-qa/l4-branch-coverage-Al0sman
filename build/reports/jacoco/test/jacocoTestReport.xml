<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Alosman_Lab4"><sessioninfo id="AdelWolf-d17d7c79" start="1696179653871" dump="1696179655357"/><package name="org/example/algorithms"><class name="org/example/algorithms/CaesarCipher" sourcefilename="CaesarCipher.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encrypt" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="4" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrypt" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="54"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/example/algorithms/XOR" sourcefilename="XOR.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encrypt" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrypt" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/example/algorithms/TranspositionCipher" sourcefilename="TranspositionCipher.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encrypt" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decrypt" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="167" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/example/algorithms/ROT13" sourcefilename="ROT13.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encrypt" desc="(Ljava/lang/String;)Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrypt" desc="(Ljava/lang/String;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/example/algorithms/Affine" sourcefilename="Affine.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encrypt" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="1" covered="60"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrypt" desc="(Ljava/lang/String;II)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMultiplicativeInverse" desc="(I)I" line="47"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="86" covered="60"/><counter type="BRANCH" missed="13" covered="7"/><counter type="LINE" missed="19" covered="11"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ROT13.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="17" mb="0" cb="2"/><line nr="12" mi="0" ci="3" mb="0" cb="2"/><line nr="13" mi="0" ci="7" mb="0" cb="2"/><line nr="14" mi="0" ci="13" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="17" mb="0" cb="2"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="7" mb="0" cb="2"/><line nr="29" mi="0" ci="13" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Affine.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="0" ci="4" mb="0" cb="0"/><line nr="8" mi="0" ci="17" mb="0" cb="2"/><line nr="9" mi="0" ci="3" mb="0" cb="2"/><line nr="10" mi="0" ci="7" mb="0" cb="2"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="1" cb="1"/><line nr="14" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="17" ci="0" mb="2" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="7" ci="0" mb="2" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="2" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="60"/><counter type="BRANCH" missed="13" covered="7"/><counter type="LINE" missed="19" covered="11"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CaesarCipher.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="5" mi="0" ci="4" mb="0" cb="0"/><line nr="7" mi="0" ci="17" mb="0" cb="2"/><line nr="8" mi="0" ci="3" mb="1" cb="1"/><line nr="9" mi="0" ci="7" mb="0" cb="2"/><line nr="10" mi="0" ci="13" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="54"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XOR.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="4" ci="0" mb="0" cb="0"/><line nr="10" mi="8" ci="0" mb="2" cb="0"/><line nr="11" mi="11" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="8" ci="0" mb="2" cb="0"/><line nr="23" mi="11" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TranspositionCipher.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="4" ci="0" mb="0" cb="0"/><line nr="7" mi="13" ci="0" mb="0" cb="0"/><line nr="8" mi="8" ci="0" mb="2" cb="0"/><line nr="9" mi="10" ci="0" mb="2" cb="0"/><line nr="10" mi="10" ci="0" mb="0" cb="0"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="17" ci="0" mb="2" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="6" ci="0" mb="2" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="13" ci="0" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="2" cb="0"/><line nr="32" mi="10" ci="0" mb="2" cb="0"/><line nr="33" mi="10" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="17" ci="0" mb="2" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="2" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="167" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="334" covered="218"/><counter type="BRANCH" missed="34" covered="24"/><counter type="LINE" missed="64" covered="35"/><counter type="COMPLEXITY" missed="29" covered="16"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="2" covered="3"/></package><package name="org/example"><class name="org/example/TextEncryptor" sourcefilename="TextEncryptor.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="AffineEncryptor" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AffineDecryptor" desc="(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="CaesarEncryptor" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CaesarDecryptor" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ROT13Encryptor" desc="(Ljava/lang/String;)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ROT13Decryptor" desc="(Ljava/lang/String;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TranspositionEncryptor" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TranspositionDecryptor" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="XOREncryptor" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="XORDecryptor" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="34"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TextEncryptor.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="1" ci="0" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="34"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="32" covered="34"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="366" covered="252"/><counter type="BRANCH" missed="34" covered="24"/><counter type="LINE" missed="72" covered="44"/><counter type="COMPLEXITY" missed="35" covered="21"/><counter type="METHOD" missed="17" covered="10"/><counter type="CLASS" missed="2" covered="4"/></report>